[ { "title": "Level 1 - Discord Server", "url": "/writeups/Zypher_2023/level-01-discord-server.html", "categories": "general", "tags": "", "date": "", "snippet": "ChallengeCheckout our Discord ServerSolutionJoin the Discord Server with the link provided and you get to see the following channelsYour goal is to locate the flag. In #announcements channel you ca...", "content": "ChallengeCheckout our Discord ServerSolutionJoin the Discord Server with the link provided and you get to see the following channelsYour goal is to locate the flag. In #announcements channel you can see the flag inbetween the rules as show in the image below üëáüèªThat‚Äôs it! You‚Äôve successfully completed Level 1 by following the hints and rules." }, { "title": "Level 2 - Email Header", "url": "/writeups/Zypher_2023/level-02-email-header.html", "categories": "cryptography, forensics", "tags": "", "date": "", "snippet": "ChallengeYou have given a Message.emlHints Check for authenticity of the email Analyse DKIM-SIGNATURE in the email header Decrypt the cipher using ROT13 SolutionDownload the giv...", "content": "ChallengeYou have given a Message.emlHints Check for authenticity of the email Analyse DKIM-SIGNATURE in the email header Decrypt the cipher using ROT13 SolutionDownload the given .eml fileCheck for the DKIM-SIGNATURE (A DKIM signature in an email header is a cryptographicstamp that verifies the authenticity of the email. Usually it uses rsa256 for encryption but here we used ROT13 weak cipher text for encryption)DKIM-Signature: v=3D1; a=3Drot13; c=3Dsimple/simple; d=3Dtech=2Ecom; i=3D@tech=2Ecom; q=3Ddns/txt; s=3Dmain; t=3D169784749; x=3D17293849; h=3Dmime-version:from:to:subject:message-id:date; p=3Dmlc{Jrypbzrgbmlcurdhrfg_0012}Decrypt the cipher using ROT13 to get the flag" }, { "title": "Level 3 - Password Protected PDF", "url": "/writeups/Zypher_2023/level-03-pdf.html", "categories": "general", "tags": "", "date": "", "snippet": "ChallengeYou are given a PDFSolutionYou need to first extract the crackable information from the file using John the Ripper tool.$ pdf2john.py unknown.pdf &gt; hashNow, crack the hash using John th...", "content": "ChallengeYou are given a PDFSolutionYou need to first extract the crackable information from the file using John the Ripper tool.$ pdf2john.py unknown.pdf &gt; hashNow, crack the hash using John the Ripper tool.$ john hash --wordlist=/usr/share/wordlists/rockyou.txt hashNow, you can see the password for the PDF file is mystery. Use this password to open the PDF file and you will get the flag." }, { "title": "Level 4 - Leo's Sinister Bellow", "url": "/writeups/Zypher_2023/level-04-leo-sinister.html", "categories": "steganography, forensics", "tags": "", "date": "", "snippet": "ChallengeThis is a basic forensics challenge. You are given an image file Leo‚Äôs Sinister BellowSolutionFirst thing to do in any steganography challenge is an exiftool check. This will tell you if t...", "content": "ChallengeThis is a basic forensics challenge. You are given an image file Leo‚Äôs Sinister BellowSolutionFirst thing to do in any steganography challenge is an exiftool check. This will tell you if there is anything hidden in the metadata of the image$ exiftool 1.pngUnfortunately, there is nothing in the metadata. Next, we can use binwalk to check for any hidden files in the image.$ binwalk 1.pngWe can see that there are no files hidden in the image. This means that some otherencoding technology has been used.The description asks us the examine the image closely.With this information we can suspect that the method used for hiding the flag is LSBencoding.In order to perform LSB extraction, we will need some tools.The tool I will be using is stegolsbhttps://pypi.org/project/stego-lsb/Running the stego-lsb tool on the image gives us the flag.$ stegolsb steglsb -r -i Chall.png -o out.txt -n 1$ cat out.txt | grep zyp" }, { "title": "Level 5 - YouTube Video", "url": "/writeups/Zypher_2023/level-05-youtube-video.html", "categories": "general", "tags": "", "date": "", "snippet": "ChallengeA YouTube video link is given YouTube VideoSolutionThe flag is hidden in the Subtitles of the video. You can see the subtitles by clicking on the CC button in the video.At 1:28, you can se...", "content": "ChallengeA YouTube video link is given YouTube VideoSolutionThe flag is hidden in the Subtitles of the video. You can see the subtitles by clicking on the CC button in the video.At 1:28, you can see the flag.The flag is in foriegn language. You can translate it using Google Translate." }, { "title": "Level 6 - Der Anfang", "url": "/writeups/Zypher_2023/level-06-der-anfang.html", "categories": "osint, steganography", "tags": "", "date": "", "snippet": "ChallengeAn image file is given. Der AnfangSolutionThe link to the social media post is given in the meta data of the image file in the id name of UserComment and the meta data can be viewed using ...", "content": "ChallengeAn image file is given. Der AnfangSolutionThe link to the social media post is given in the meta data of the image file in the id name of UserComment and the meta data can be viewed using exiftool.$ exiftool der_Anfang.jpgIn the reddit post the link to the git history is salted and placedLink after removing unwanted special characters üëáüèªhttps://github.com/yshui/picom/commit/a2bcf94ce8fa7216f69fb6ace2c1b3776bdce823The flag is in the commit message." }, { "title": "Level 7 - Audio", "url": "/writeups/Zypher_2023/level-07-audio.html", "categories": "spectography, forensics", "tags": "", "date": "", "snippet": "ChallengeA audio file is given 4UDI0.mp3SolutionAudacity can be used to view the spectogram to an audioImport the audio file in the projectA waveform will be displayedRight click the track and choo...", "content": "ChallengeA audio file is given 4UDI0.mp3SolutionAudacity can be used to view the spectogram to an audioImport the audio file in the projectA waveform will be displayedRight click the track and choose spectrogramThe flag is displayed in the spectrogram at 6 seconds" }, { "title": "Level 8 - Z0D1AC", "url": "/writeups/Zypher_2023/level-08-zodiac.html", "categories": "cryptography", "tags": "", "date": "", "snippet": "ChallengeYou have given a file Z0D1ACSolutionView the file contents using cat$ cat Z0D1ACSo we can copy the binary and use an online decoder to convert the binary to human readable text.Now we get ...", "content": "ChallengeYou have given a file Z0D1ACSolutionView the file contents using cat$ cat Z0D1ACSo we can copy the binary and use an online decoder to convert the binary to human readable text.Now we get this new ciphered test which contains the coordinates of the location. This is base64 encoded. So we can use an online decoder to decode the text.Enclose the result in zyp{} as the flag format." }, { "title": "Level 9 - f0x3rr", "url": "/writeups/Zypher_2023/level-09-f0x3rr.html", "categories": "web, osint", "tags": "", "date": "", "snippet": "ChallengeYou are given a websiteSolutionIn the website, f0x3rr is a endpointClick Download and a file will be downloadedConvert this decimal to string using online converter and you‚Äôll get a github...", "content": "ChallengeYou are given a websiteSolutionIn the website, f0x3rr is a endpointClick Download and a file will be downloadedConvert this decimal to string using online converter and you‚Äôll get a github and in the issue section there will be a password hidden in the conversationPassword is zero-dayWhen you visit the endpoint, click the download button and you‚Äôll Zypher event posterScan the QR code and you‚Äôll get a base64 encoded string, decode it and you‚Äôll get a link an endpoint /vitcyscomzypherGo to the endpoint and download the fileConvert the binary to stringDecoding the Caesar cipher" }, { "title": "Level 10 - Zypher Quest 1", "url": "/writeups/Zypher_2023/level-10-zypher-quest-1.html", "categories": "general, linux", "tags": "", "date": "", "snippet": "ChallengeYou are given a file ZypherQuestSolutionAs the file don‚Äôt have any extension, we can use file command to check the file typeYou can see it is a zip file. Now use unzip to extract the fileY...", "content": "ChallengeYou are given a file ZypherQuestSolutionAs the file don‚Äôt have any extension, we can use file command to check the file typeYou can see it is a zip file. Now use unzip to extract the fileYou can see the extracted file is a gzip file which is archived using tar. You can see 3 new files have been extracted.You may want to read the following files but skipping that, we check the filetype for Seal.The given file is a bzip2 compressed data. To unzip the file, we can firstlyrename the file to add .bz2 extension and proceed to unzip it using bzip2. Thisgives us a tar file which can be further extracted using tar.mv Seal Seal.bz2bzip2 -d Seal.bz2tar -xvf SealInstead of these 3 steps we can directly uncompressed the given data ‚ÄúSeal‚Äùusing tar -xjf command.We can see new files have been uncompressed. We also see a file namedStart.sh which is a script file. We can try running this using ./Start.sh. Running itessentially does nothing but delete old files cluttering the screen if theyweren‚Äôt already deleted. We can try and read some files to try and get someclues. Here the file Admin looks interesting. Checking its file type, we see it is another tar file.Extracting it gives us a file name Z0d1aCisWatching. We again check the filetype and try decompressing it.Further checking the decompressed file (data in this case) We see a tar fileagain. Decompressing it gives an interesting file.Checking its file type shows there are no permissions assigned to the given file. So, we used chmod 444 or chmod +r to make the file readable." }, { "title": "Level 11 - Zypher RE", "url": "/writeups/Zypher_2023/level-11-zypher-re.html", "categories": "reverse_engineering", "tags": "", "date": "", "snippet": "ChallengeYou are given a Zypher_RE.py fileSolutionOn running the file, it asks for the username that is ‚ÄòFOX3R‚Äô as evidentfrom this part of codedef ui_flow(): intro() if username=='FOX3R': ...", "content": "ChallengeYou are given a Zypher_RE.py fileSolutionOn running the file, it asks for the username that is ‚ÄòFOX3R‚Äô as evidentfrom this part of codedef ui_flow(): intro() if username=='FOX3R': while loop: menu() else: print(\"Access denied\")ui_flow()After providing the username as input, we get some messages pertainingto the overall theme of the CTF event, ZYPHER.Choosing the Rabbit option leads us to nowhere. It must be a rabbit hole asthe name suggests.Choosing the enter key option, it asks for a key that leads us to the keyfunctiondef key(x): if x==hashlib.sha256(salt.encode('utf-8')).hexdigest()[4]: return Truesalt = \"ZYPHER\"We can find x by running this piece of code(encrypting salt using SHA256after encoding it in utf-8 format)import hashlibimport cryptography.fernet import Fernetimport base64salt = \"ZYPHER\"hashlib.sha256(salt.encode('utf-8')).hexdigest()hashlib.sha256(salt.encode('utf-8')).hexdigest()[4]Now that we have found the key, let us inspect the encrypt() functiondef encrypt(flag,key): enc=''.join([chr((ord(flag[i]) &lt;&lt; key) + ord(flag[i + 1]))+chr(ord(salt[random.randint(1, 10)])&lt;&lt;key) for i in range(0, len(flag), 2)]) print(enc) return encdef decrypt(enc_text,key): ... #return flag #use the flag to unlock file#encrypt('FLAG', x)We‚Äôve found the key as 8The encrypt function takes the flag encrypts it with the key and returns theciphertext(enc)The program is prompting us to write a decrypt function to take theciphertext and key as parameters and return the original flag.Also the ciphertext is already given in this part of codesalt='ZYPHER'secret_key_prior='hacker{'secret_key_main='Âå¥ÂÄÄ‰πâÂàÄ„ïô‰åÄÂº±‰¨Ä„ùî‰¨Ä„ôÉ‰ÑÄÂëüÂàÄ'secret_key_latter='}'Carefully investigating the encryption code, we see that the program shiftsthe bits for every other letter of the flag, left by 8 bits (1 byte). Then, it adds the next letter of the flag to the shifted value .Also every other letter of ciphertext is just a random character.We can reverse this by first removing/skipping through the randomcharacters.Then we shift the bits right to get the first letter in the pair and convert theencoded character to bytes and get the last byte to get the second letter inthe pair. The following code decrypt.pyc='Âå¥ÂÄÄ‰πâÂàÄ„ïô‰åÄÂº±‰¨Ä„ùî‰¨Ä„ôÉ‰ÑÄÂëüÂàÄ'a=''for i in range(0,len(c),2): e=chr(ord(c[i])&gt;&gt;8) a+=e a+=chr(ord(c[i])-(ord(e)&lt;&lt;8))print(a)Here ‚Äòa‚Äô is the final flag. We have step 2 in range to skip the randomcharactersOn running this decryption code, we get the flag as S4NI5Y_17T6CT_" }, { "title": "Level 12 - PCAP", "url": "/writeups/Zypher_2023/level-12-pcap.html", "categories": "forensics, network", "tags": "", "date": "", "snippet": "ChallengeYou are given a network_mitm.pcap fileSolutionExtract contents using NetworkMinerLoad in the pcap file and extract the zip fileExtract flag.zip using hashed password inside welcome.pdfDecr...", "content": "ChallengeYou are given a network_mitm.pcap fileSolutionExtract contents using NetworkMinerLoad in the pcap file and extract the zip fileExtract flag.zip using hashed password inside welcome.pdfDecrypt hashing using CrackStationExtract the files using password welC0me$ cat flag.txt" }, { "title": "Level 13 - NFT", "url": "/writeups/Zypher_2023/level-13-nft.html", "categories": "misc", "tags": "", "date": "", "snippet": "ChallengeYou have been given a file called image.nftHints Look at this hintSolutionDownload the fileHere Z0d1ac_1 seems to look like a username. Let‚Äôs google digital market for sea of art and see ...", "content": "ChallengeYou have been given a file called image.nftHints Look at this hintSolutionDownload the fileHere Z0d1ac_1 seems to look like a username. Let‚Äôs google digital market for sea of art and see if something related to nfts comes up.The first link itself comes up to be the biggest nft marketplace and we the link the word sea to opensea from previous hint. Lets lookup for Z0d1ac_1 username in opensea.On the profile page of Z0d1ac_1 you can see the same nft as image.nft file, openthe NFTIn the description it key is mastermindWhen you look in the item activity section, you‚Äôll find transfers between different entities of Z0d1ac but one suspicious account involved in all these transfers is RU55I4N_M45T3RWhen you look for the RU55I4N_M45T3R username, you‚Äôll find another NFTIn the description you can see the reward linkGo to https://www.dcode.fr/cipher-identifier and look for possible ciphersHere we can see that highest probability is for ASCII Code" }, { "title": "Level 14 - Zypher Quest 2", "url": "/writeups/Zypher_2023/level-14-zypher-quest-2.html", "categories": "cryptography", "tags": "", "date": "", "snippet": "ChallengeYou have been given a file 7.1.zipSolutionWe know that the files are RSA encrypted since we are given private keys for each of them We will use the following command to decrypt each of the...", "content": "ChallengeYou have been given a file 7.1.zipSolutionWe know that the files are RSA encrypted since we are given private keys for each of them We will use the following command to decrypt each of themopenssl pkeyutl -decrypt -inkey private_key1.pem -in encrypted_file1.bin -out decrypted_chat1.txtopenssl pkeyutl -decrypt -inkey private_key2.pem -in encrypted_file2.bin -out decrypted_chat2.txtopenssl pkeyutl -decrypt -inkey private_key3.pem -in encrypted_file3.bin -out decrypted_chat3.txt" }, { "title": "Level 15 - Zypher Quest 3", "url": "/writeups/Zypher_2023/level-15-zypher-quest-3.html", "categories": "forensics, linux", "tags": "", "date": "", "snippet": "ChallengeYou have been given a file auth.log.zipSolutionWe can see that the zip file is password-protectedSo we have to use a dictionary-based attack tool to brute-force the password$ zip2john auth...", "content": "ChallengeYou have been given a file auth.log.zipSolutionWe can see that the zip file is password-protectedSo we have to use a dictionary-based attack tool to brute-force the password$ zip2john auth.log.zip &gt; auth.txtThis will give you the password, use it to unzip the file and go through itAs we can see the attacker used SSH brute force to hack into the machineThe answer is SSH bruteforce (hydra)" }, { "title": "Level 16 - level8z2", "url": "/writeups/Zypher_2023/level-16-level8z2.html", "categories": "boot2root, cryptography, steganography", "tags": "", "date": "", "snippet": "ChallengeYou have been given a Tryhackme linkSolutionYou will be getting an IP address when you start your machine 10.0.2.18, you can proceed to conduct an Nmap scan to gain insights into the targe...", "content": "ChallengeYou have been given a Tryhackme linkSolutionYou will be getting an IP address when you start your machine 10.0.2.18, you can proceed to conduct an Nmap scan to gain insights into the target network. We‚Äôll use a comprehensive scan to check all available ports and enable version detection to identify the services running on those ports.Exploring FTP and SSH ServicesIn the Nmap results for IP address 10.0.2.18, we observed that the FTP and SSH services are open and accessible. This presents an opportunity to investigate these services further.We‚Äôll start by focusing on FTP (File Transfer Protocol) and explore the possibility of anonymouslogin. Anonymous FTP login is a common way to access publicly available files without the need for authentication.In the course of our exploration, we discovered an ‚Äòintroduction.txt‚Äô file on the FTP server, which contains the username ‚Äòzodiclown‚Äô. Now that we have the username and are aware that theSSH service is available, we can attempt to gain access to the system via SSH. However, access requires a password, and to uncover it, we will employ a password brute-force approach using a tool like ‚ÄòHydra‚Äô to systematically try various password combinations in an attempt togain entry.Upon utilizing Hydra for a password brute-force attack, we successfully retrieved the password, which is cookie. With the obtained credentials in hand, we can now proceed to access the system via SSH and embark on an exploration to uncover the content and resources it holdsAfter successfully logging in via SSH, we decided to check the list of users present on the system, which can be found in the /etc/passwd file. In doing so, we discovered the existence of two user accounts, zodiclown and zodiac. This observation led us to the inference that the zodiac user account may hold significant information, motivating us to explore its home directory and potentially gain root-level access.We again go back to zodiclown‚Äôs home folder, we found two folders named chitchat and plans. Both folders contained numerous files, but the key clue was discovered in the chitchat/personal_conv.txt file. This file revealed an image link, which serves as an intriguing lead for our further investigation.Following the provided image link, we encountered an image featuring Gothic Z. We proceeded to download this image and initiated our steganographic skills for analysis. This technique involves examining the image for hidden information or messages concealed within it.Utilizing initial tools like exiftool and strings, we uncovered a passphrase, which turned out tobe topsecret. This discovery strongly suggested the presence of hidden information within the image. With this in mind, we applied steghide to extract concealed data, revealing a file containing a Drive link associated with Zodiac‚Äôs activities.Upon accessing the Drive link, we encountered a hexhue. To decode this information, we utilized the online tool found at https://www.dcode.fr/hexahue-cipherAfter deciphering, the result revealed the password ERD3NC0RP, which granted us access asthe root user, further advancing our investigation.After obtaining the root password and successfully logging in, we navigated to the zodiac user‚Äôs home directory. Inside this directory, we encountered a Final_Flag folder. Within the Final_Flag folder were six text files. The final text file, upon inspection, revealed the flag." } ]
